GORM_DRIVER_TYPE=sqlite # Types: sqlite, mysql
GORM_LOGGER_DISCARD=false # true - output stream is a ioutil.Discard writer
GORM_LOGGER_MODE=4 # Modes: 4 - info, 3 - warn, 2 - error, 1 - silent (https://gorm.io/docs/logger.html#Log-Levels)
GORM_SKIP_DEFAULT_TRANSACTION=true # https://gorm.io/docs/transactions.html#Disable-Default-Transaction
GORM_MIGRATE=true # false - Disable models migration on to database tables

CACHE_TYPE=memory # Types: memory, redis

SQLITE_DATABASE=lrw # Database name

MYSQL_DATABASE=lrw # Database name
MYSQL_USER=lrw
MYSQL_PASSWORD=lrw
MYSQL_HOST=localhost
MYSQL_PORT=3306
MYSQL_URL=%s:%s@tcp(%s:%d)/%s?charset=utf8&parseTime=True&loc=Local # put https://pkg.go.dev/fmt#hdr-Printing formats for user, password, host, port, database respectively
MYSQL_MAX_IDLE_CONNECTIONS=2 # https://github.com/go-sql-driver/mysql#important-settings
MYSQL_MAX_OPEN_CONNECTIONS=2 # https://github.com/go-sql-driver/mysql#important-settings

REDIS_URL=%s:%d # put https://pkg.go.dev/fmt#hdr-Printing formats for host, port respectively
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=redis

AUTH_COOKIE=tk # Cookie name
AUTH_COOKIE_PATH=/api/v1
AUTH_COOKIE_DOMAIN=localhost
AUTH_COOKIE_SECURE=false # send only through https
AUTH_COOKIE_HTTP_ONLY=true # XSS attacks
AUTH_SAME_SITE=3 # Modes: 4 - None, 3 - Strict, 2 - Lax, 1 - Default (https://go.dev/src/net/http/cookie.go#L50)
AUTH_CUSTOM_AUTHENTICATION_HEADER=Authorization # Header name where server is looking for token
AUTH_JWT_KEY=password_for_sign_jwt_tokens # 128 min length
AUTH_AUDIENCE=auth.audience # audience name on signed token
AUTH_ISSUER=auth.issuer # issuer name on signed token
AUTH_EXPIRES=525600 # value on minutes equivalent to 1 year

AUTH_VERIFY_FROM=verify@lripardo.github.com
AUTH_VERIFY_KEY=password_for_verify_accounts # 128 min length
AUTH_VERIFY_EXPIRES=30 # minutes
AUTH_VERIFY_ROUTE=http://localhost:8080/api/v1/auth/verify
AUTH_VERIFY_EMAIL_TEMPLATE_NAME=VerifyEmailTemplate
AUTH_VERIFY_AUDIENCE=auth.verify.audience # audience name on signed token
AUTH_VERIFY_ISSUER=auth.verify.issuer # issuer name on signed token

AUTH_RESET_PASSWORD_FROM=reset_password@lripardo.github.com
AUTH_RESET_PASSWORD_KEY=password_for_reset_passwords # 128 min length
AUTH_RESET_PASSWORD_EXPIRES=5 # minutes
AUTH_RESET_PASSWORD_ROUTE=http://localhost:8080/api/v1/auth/reset-password
AUTH_RESET_PASSWORD_TEMPLATE_NAME=ResetPasswordTemplate
AUTH_RESET_PASSWORD_AUDIENCE=auth.reset.password.audience # audience name on signed token
AUTH_RESET_PASSWORD_ISSUER=auth.reset.password.issuer # issuer name on signed token

# for all cors configs https://github.com/gin-contrib/cors#cors-gins-middleware
CORS_ALLOW_ORIGINS=["http://localhost:8080"]
CORS_ALLOW_METHODS=["GET", "POST", "PUT", "DELETE", "HEAD"]
CORS_ALLOW_HEADERS=["Origin", "Content-Length", "Content-Type", "X-Request-Width", "Accept", "Authorization"]
CORS_EXPOSE_HEADERS=[]
CORS_MAX_AGE=12 # hours
CORS_ALLOW_ALL_ORIGINS=true # if true, CORS_ALLOW_ORIGINS must be empty, otherwise a error is returned
CORS_ALLOW_CREDENTIALS=true # allow cookie send
CORS_ALLOW_WILDCARD=false
CORS_ALLOW_BROWSER_EXTENSIONS=false
CORS_ALLOW_WEBSOCKETS=false
CORS_ALLOW_FILES=false

GIN_MODE=debug # Modes: debug, release, test
GIN_TRUSTED_PROXIES=["127.0.0.1"] # https://pkg.go.dev/github.com/gin-gonic/gin#readme-don-t-trust-all-proxies and https://www.cloudflare.com/ips
GIN_ENABLE_LOG=true # requests log
GIN_ALWAYS_OK=false # true - server http status code is always 200 OK
PORT=8080 # remove gin message port is not set

AUTH_APP_SHOW_USER_EXISTS=true # security feature
AUTH_APP_SHOW_USER_NOTFOUND=true # security feature
AUTH_APP_ALLOW_LOGIN_FROM_NOT_VERIFIED=false # security feature
AUTH_APP_INPUT_VALIDATOR=default # Types: default, h captcha
AUTH_APP_PASSWORD_COST=10 # cost rounds bcrypt

MIDDLEWARES_APP_SERVER_NAME=LRW # Header response
MIDDLEWARES_APP_ALLOW_EMPTY_ORIGIN=true # false - Mandatory request "Origin" header. Browsers direct HTTP GET is denied

# https://docs.spring.io/spring-security/site/docs/5.0.x/reference/html/headers.html
MIDDLEWARES_APP_CUSTOM_HEADERS=["Cache-Control: no-cache, no-store, max-age=0, must-revalidate", "X-Content-Type-Options: nosniff", "X-Frame-Options: DENY", "Referrer-Policy: no-referrer"]

EMAIL_SENDER_TYPE=console # Types: console, ses

LOGGER_LEVEL=4 # LRW Logger. Levels: 4 - debug, 3 - info, 2 - warn, 1 - error, 0 - silent

# AWS Services
AWS_SES_NAME=Luiz Ricardo Ripardo # name on email sender
AWS_ACCESS_KEY_ID=aws_access_key_id
AWS_SECRET_ACCESS_KEY=aws_secret_access_key
AWS_REGION=us-east-1 # https://docs.aws.amazon.com/general/latest/gr/rande.html#region-names-codes

# H Captcha service
H_CAPTCHA_SITE_KEY=my_h_captcha_site_key
H_CAPTCHA_SECRET_KEY=my_h_captcha_secret_key
H_CAPTCHA_ALLOWED_HOSTS=["dummy-key-pass"] # H Captcha allowed hosts list, remove dummy hosts on production environment
